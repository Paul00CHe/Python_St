# Сумма простых чисел меньше 10 равна 2 + 3 + 5 + 7 = 17.
# Найдите сумму всех простых чисел меньше двух миллионов.
# =========================================================================================
# Для нахождения всех простых чисел не больше заданного числа n, следуя методу Эратосфена,
# нужно выполнить следующие шаги:
# Выписать подряд все целые числа от двух до n (2, 3, 4, …, n).
# Пусть переменная p изначально равна двум — первому простому числу.
# Зачеркнуть в списке числа от p^2 до n считая шагами по p (это будут числа кратные p: 2p, 3p, 4p, …).
# Найти первое незачёркнутое число в списке, большее чем p, и присвоить значению переменной p это число.
# Повторять шаги 3 и 4, пока возможно.
# Теперь все незачёркнутые числа в списке — это все простые числа от 2 до n.
import timeit
code_to_test = """
def prost_ch(n):
    a = list(range(n + 1))
    for i in a[2:]:
        if i ** 2 <= n:
            for j in range(i ** 2, len(a) + 1, i):
                if j <= n:
                    a[j] = 0
                else:
                    break
        else:
            break
    b = []
    for k in a:
        if a[k] == 0 or a[k] == 1:
            continue
        else:
            b.append(k)
    return b
print(sum(prost_ch(2000000)))
"""
# повторяется 1 раз (number) и / на 1 (кол-во повторений) для нахождения 1го прогона
elapsed_time = timeit.timeit(code_to_test, number=1)/1
print(elapsed_time)
