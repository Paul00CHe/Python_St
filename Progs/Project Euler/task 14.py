# Следующая повторяющаяся последовательность определена для множества натуральных чисел:
# n → n/2 (n - четное)
# n → 3n + 1 (n - нечетное)
# Используя описанное выше правило и начиная с 13, сгенерируется следующая последовательность:
# 13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
# Получившаяся последовательность (начиная с 13 и заканчивая 1) содержит 10 элементов. Хотя это до сих пор и
# не доказано (проблема Коллатца (Collatz)), предполагается, что все сгенерированные таким образом
# последовательности оканчиваются на 1.
# Какой начальный элемент меньше миллиона генерирует самую длинную последовательность?
# Примечание: Следующие за первым элементы последовательности могут быть больше миллиона.


def proverka(x):
    if x % 2 == 0:
        x = x / 2
    else:
        x = 3 * x + 1
    return x


C = dict()
#D = []
for i in range(1000001, 2, -1):
    A = []
    m = i
    #D.append(i)
    while i >= 1:
        if i > 1:
            A.append(proverka(i))
            i = proverka(i)
        elif i == 1:
            A.append(i)
            break
    C[m] = len(A)
max_val = max(C.values())
otv = {k:v for k, v in C.items() if v == max_val}
print(otv)
#print(D.index(max(C)))
